name: release

on:
  release:
    types: [published]

env:
  MATURIN_VERSION: 1.3.0
  PY_ALL: 3.8 3.9 3.10 3.11 3.12 pypy3.8 pypy3.9 pypy3.10

jobs:
  sdist:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: pyo3/maturin-action@v1
      with:
        maturin-version: v${{ env.MATURIN_VERSION }}
        rust-toolchain: stable
        command: sdist
        args: --out dist
    - name: Upload sdist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  wheels:
    name: wheel ${{ matrix.platform || matrix.os }}(${{ matrix.target }}) - ${{ matrix.manylinux || 'auto' }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: macos
            interpreter: 3.8 3.9 3.10 3.11 3.12 pypy3.9 pypy3.10
          - os: ubuntu
            platform: linux
            target: aarch64
            container: messense/manylinux_2_24-cross:aarch64
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
        exclude:
          - os: windows
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: pyo3/maturin-action@v1
        with:
          maturin-version: v${{ env.MATURIN_VERSION }}
          rust-toolchain: stable
          command: build
          args: --release --out dist --interpreter ${{ matrix.interpreter || env.PY_ALL }}
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          container: ${{ matrix.container }}
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: [ sdist, wheels ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade pip twine
          twine upload --skip-existing dist/*
